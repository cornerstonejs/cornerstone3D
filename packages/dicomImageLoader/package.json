{
  "name": "@cornerstonejs/dicom-image-loader",
  "version": "0.3.6",
  "description": "Cornerstone Image Loader for DICOM WADO-URI and WADO-RS and Local file",
  "keywords": [
    "DICOM",
    "WADO",
    "cornerstone",
    "medical",
    "imaging"
  ],
  "author": "@cornerstonejs (previously Chris Hafey)",
  "homepage": "https://github.com/cornerstonejs/cornerstone3D-beta",
  "license": "MIT",
  "main": "dist/cornerstoneDICOMImageLoader.bundle.min.js",
  "module": "dist/esm/src/imageLoader/index.js",
  "files": [
    "dist/"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/cornerstonejs/cornerstone3D-beta.git"
  },
  "publishConfig": {
    "access": "public"
  },
  "scripts": {
    "build:umd:dynamic": "cross-env NODE_ENV=production webpack --config .webpack/webpack-dynamic-import.js",
    "build:umd:bundle": "cross-env NODE_ENV=production webpack --config .webpack/webpack-bundle.js",
    "build:esm": "tsc --project ./tsconfig.esm.json",
    "build:all": "yarn run build:umd:dynamic & yarn run build:umd:bundle",
    "copy-dts": "echo 'not implemented yet'",
    "build": "yarn run build:all && yarn run copy-dts",
    "api-check": "echo 'not implemented yet'",
    "build:update-api": "echo 'not implemented yet'",
    "cm": "npx git-cz",
    "clean": "npm run clean:dist && npm run clean:coverage",
    "clean:dist": "shx rm -rf dist",
    "clean:docs": "shx rm -rf documentation",
    "clean:coverage": "shx rm -rf coverage",
    "doc": "npm run doc:generate && opn documentation/index.html",
    "doc:generate": "npm run clean:docs && jsdoc -c .jsdocrc",
    "eslint": "eslint -c .eslintrc.js src",
    "eslint-quiet": "eslint -c .eslintrc.js --quiet src",
    "eslint-fix": "eslint -c .eslintrc.js --fix src",
    "eslint-fix-test": "eslint -c .eslintrc.js --fix test",
    "start": "npm run webpack:dev",
    "start:dev": "webpack-dev-server --config .webpack/webpack-dev",
    "test": "npm run test:chrome",
    "test:ci": "echo 'test:ci not implemented yet'",
    "test:all": "npm run test && npm run test:chrome && npm run test:firefox",
    "test:chrome": "karma start config/karma/karma-base.js",
    "test:firefox": "karma start config/karma/karma-firefox.js",
    "test:watch": "karma start config/karma/karma-watch.js",
    "watch": "npm run clean && shx mkdir dist && npm run webpack:watch",
    "dev": "npm run webpack:dev",
    "webpack:dev": "webpack serve --progress --config .webpack/webpack-dev.js",
    "webpack:dynamic-import": "webpack --progress --config .webpack/webpack-dynamic-import",
    "webpack:bundle": "webpack --progress --config .webpack/webpack-bundle",
    "webpack:dynamic-import:watch": "webpack --progress --watch --config .webpack/webpack-dynamic-import",
    "webpack:dynamic-import:debug": "webpack --progress --watch --config .webpack/webpack-dynamic-import-debug",
    "webpack:watch": "webpack --progress --watch  --config .webpack",
    "prepublishOnly": "yarn run build"
  },
  "devDependencies": {
    "@babel/plugin-proposal-object-rest-spread": "^7.14.7",
    "@babel/runtime-corejs3": "^7.15.4",
    "@types/emscripten": "^1.39.6",
    "@types/jasmine": "^4.3.1",
    "@types/karma": "^6.3.3",
    "chai": "^4.3.4",
    "concat": "^1.0.3",
    "core-js": "^3.26.1",
    "coveralls": "^3.1.1",
    "docdash": "^1.2.0",
    "exports-loader": "^3.0.0",
    "fs-extra": "^10.0.0",
    "jsdoc": "^3.6.7",
    "karma-mocha": "^2.0.1",
    "lodash": "^4.17.21",
    "mocha": "^9.1.1",
    "open-cli": "^7.0.1",
    "puppeteer": "^10.2.0",
    "shx": "^0.3.3"
  },
  "dependencies": {
    "@babel/eslint-parser": "^7.19.1",
    "@cornerstonejs/codec-charls": "^1.2.3",
    "@cornerstonejs/codec-libjpeg-turbo-8bit": "^1.2.2",
    "@cornerstonejs/codec-openjpeg": "^1.2.2",
    "@cornerstonejs/codec-openjph": "^2.4.2",
    "@cornerstonejs/core": "^0.43.1",
    "coverage-istanbul-loader": "^3.0.5",
    "date-format": "^4.0.14",
    "dicom-parser": "^1.8.9",
    "pako": "^2.0.4",
    "uuid": "^9.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "src/**/*.{js,jsx,json,css}": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
