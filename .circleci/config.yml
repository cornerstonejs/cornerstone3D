# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

defaults: &defaults
  working_directory: ~/repo
  # https://circleci.com/docs/2.0/circleci-images/#language-image-variants
  docker:
    - image: cimg/node:16.14.2-browsers
      environment:
        TERM: xterm # Enable colors in term


jobs:
  CHECKOUT:
    <<: *defaults
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - restore_cache:
          name: Restore Package Cache
          keys:
            - packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - packages-v1-{{ .Branch }}-
            - packages-v1-
      - run: yarn install
      - save_cache:
          name: Save Package Cache
          paths:
            - ~/.cache/yarn
          key: packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .

  BUILD:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: yarn run build

  # https://circleci.com/docs/2.0/collect-test-data/#karma
  TEST:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: mkdir ~/junit
      - run:
          command: yarn run test:ci
          environment:
            JUNIT_REPORT_PATH: ./junit/
            JUNIT_REPORT_NAME: test-results.xml
          when: always
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit
      - persist_to_workspace:
          root: ./
          paths:
            - packages/docs

  BUILD_DOCS:
    <<: *defaults
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/repo
      # TODO: Coverage is not found? Not persisted?
      #- run:
      #    name: Copy Test Coverage for Docs
      #    command: cd packages/docs && yarn run copy-coverage-to-docs && cd ..
      # TODO: Try to fix this later
      #- run:
      #    name: Prep Examples
      #    command: cd packages/docs && yarn run prep-examples && cd ..
      - run:
          name: Build Docs
          command: cd packages/docs && yarn run docs:ci && cd ../..
      - persist_to_workspace:
          root: ./
          paths:
            - packages/docs/build

  DEPLOY_DOCS:
    <<: *defaults
    resource_class: small
    steps:
      - attach_workspace:
          at: ./
      - run: # print the name of the branch we're on
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Deploy to Netlify
          # This uses environment variables in the CircleCI
          # NETLIFY_AUTH_TOKEN
          # NETLIFY_SITE_ID
          command: ./node_modules/netlify-cli/bin/run deploy --dir=./packages/docs/build --alias ${CIRCLE_BRANCH}

  DEPLOY_DOCS_TO_PROD:
    <<: *defaults
    resource_class: small
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Deploy to Netlify
          # This uses environment variables in the CircleCI
          # NETLIFY_AUTH_TOKEN
          # NETLIFY_SITE_ID
          command: ./node_modules/netlify-cli/bin/run deploy --dir=./packages/docs/build --prod

  NPM_PUBLISH:
    <<: *defaults
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Avoid hosts unknown for github
          command:
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking
            no\n" > ~/.ssh/config
      - run: npx lerna version
      - run: npx lerna publish from-package

workflows:
  version: 2

  # PULL REQUEST
  PULL_REQUEST:
    jobs:
      - CHECKOUT:
          filters:
            branches:
              ignore:
                - main
                - feature/*
                - hotfix/*
      - BUILD:
          requires:
            - CHECKOUT
      - TEST:
          requires:
            - CHECKOUT # TODO: Also require build?
      - BUILD_DOCS:
          requires:
            - TEST
      - DEPLOY_DOCS:
          requires:
            - BUILD_DOCS

  # MERGE TO MAIN
  TEST_AND_RELEASE:
    jobs:
      - CHECKOUT:
          filters:
            branches:
              only: main
      - BUILD:
          requires:
            - CHECKOUT
      - TEST:
          requires:
            - CHECKOUT
      - NPM_PUBLISH:
          requires:
            - BUILD
      - BUILD_DOCS:
          requires:
            - TEST
      - DEPLOY_DOCS_TO_PROD:
          requires:
            - BUILD_DOCS
