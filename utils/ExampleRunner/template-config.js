const path = require('path')

const csRenderBasePath = path.resolve('../core/src/index')
const csToolsBasePath = path.resolve('../tools/src/index')
const csStreamingBasePath = path.resolve(
  '../streaming-image-volume-loader/src/index'
)

module.exports = function buildConfig(
  name,
  relPath,
  destPath,
  root,
  exampleBasePath
) {
  return `
// THIS FILE IS AUTOGENERATED - DO NOT EDIT
var path = require('path')

const vtkRules = require('vtk.js/Utilities/config/dependency.js').webpack.core
  .rules
var rules = [].concat(require('./rules-examples.js'), vtkRules);
var modules = [path.resolve('../node_modules/'), path.resolve('../../../node_modules/')];

console.log('modules', modules)
var HtmlWebpackPlugin = require('html-webpack-plugin');
var ESLintPlugin = require('eslint-webpack-plugin');
var webpack = require('webpack');
var path = require('path');
module.exports = {
  mode: 'development',
  devtool: 'inline-source-map',
  plugins: [
    new ESLintPlugin(),
    new HtmlWebpackPlugin({
      template: '${root.replace(
        /\\/g,
        '\\\\'
      )}/utils/ExampleRunner/template.html',
    }),
    new webpack.DefinePlugin({
      __BASE_PATH__: "''",
    }),
  ],
  entry: path.join('${exampleBasePath.replace(
    /\\/g,
    '\\\\'
  )}', '${relPath.replace(/\\/g, '\\\\')}'),
  output: {
    path: '${destPath.replace(/\\/g, '\\\\')}',
    filename: '${name}.js',
  },
  module: {
    rules,
  },
  resolve: {
    alias: {
      '@cornerstonejs/core': '${csRenderBasePath.replace(/\\/g, '\\\\')}',
      '@cornerstonejs/tools': '${csToolsBasePath.replace(/\\/g, '\\\\')}',
      '@cornerstonejs/streaming-image-volume-loader': '${csStreamingBasePath.replace(
        /\\/g,
        '\\\\'
      )}',
    },
    modules,
    extensions: ['.ts', '.tsx', '.js', '.jsx'],
    fallback: {
      fs: false,
      path: require.resolve('path-browserify'),
      events: false,
    },
  },
  devServer: {
    hot: true,
    open: false,
    port: 3000,
    historyApiFallback: true,
    headers: {
      "Cross-Origin-Embedder-Policy": "require-corp",
      "Cross-Origin-Opener-Policy": "same-origin"
    }
  },
};
`
}
